/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PositionType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.LocalDate;
/**
 * Block of securities receiving the same tax treatment
 */
@Schema(description = "Block of securities receiving the same tax treatment")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class TaxLot {
  @SerializedName("originalPurchaseDate")
  private LocalDate originalPurchaseDate = null;

  @SerializedName("quantity")
  private BigDecimal quantity = null;

  @SerializedName("purchasedPrice")
  private BigDecimal purchasedPrice = null;

  @SerializedName("costBasis")
  private BigDecimal costBasis = null;

  @SerializedName("currentValue")
  private BigDecimal currentValue = null;

  @SerializedName("positionType")
  private PositionType positionType = null;

  public TaxLot originalPurchaseDate(LocalDate originalPurchaseDate) {
    this.originalPurchaseDate = originalPurchaseDate;
    return this;
  }

   /**
   * Get originalPurchaseDate
   * @return originalPurchaseDate
  **/
  @Schema(description = "")
  public LocalDate getOriginalPurchaseDate() {
    return originalPurchaseDate;
  }

  public void setOriginalPurchaseDate(LocalDate originalPurchaseDate) {
    this.originalPurchaseDate = originalPurchaseDate;
  }

  public TaxLot quantity(BigDecimal quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Lot quantity
   * @return quantity
  **/
  @Schema(description = "Lot quantity")
  public BigDecimal getQuantity() {
    return quantity;
  }

  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  public TaxLot purchasedPrice(BigDecimal purchasedPrice) {
    this.purchasedPrice = purchasedPrice;
    return this;
  }

   /**
   * Original purchase price
   * @return purchasedPrice
  **/
  @Schema(description = "Original purchase price")
  public BigDecimal getPurchasedPrice() {
    return purchasedPrice;
  }

  public void setPurchasedPrice(BigDecimal purchasedPrice) {
    this.purchasedPrice = purchasedPrice;
  }

  public TaxLot costBasis(BigDecimal costBasis) {
    this.costBasis = costBasis;
    return this;
  }

   /**
   * Total amount of money spent acquiring this lot including any fees or commission expenses incurred
   * @return costBasis
  **/
  @Schema(description = "Total amount of money spent acquiring this lot including any fees or commission expenses incurred")
  public BigDecimal getCostBasis() {
    return costBasis;
  }

  public void setCostBasis(BigDecimal costBasis) {
    this.costBasis = costBasis;
  }

  public TaxLot currentValue(BigDecimal currentValue) {
    this.currentValue = currentValue;
    return this;
  }

   /**
   * Lot market value
   * @return currentValue
  **/
  @Schema(description = "Lot market value")
  public BigDecimal getCurrentValue() {
    return currentValue;
  }

  public void setCurrentValue(BigDecimal currentValue) {
    this.currentValue = currentValue;
  }

  public TaxLot positionType(PositionType positionType) {
    this.positionType = positionType;
    return this;
  }

   /**
   * Get positionType
   * @return positionType
  **/
  @Schema(description = "")
  public PositionType getPositionType() {
    return positionType;
  }

  public void setPositionType(PositionType positionType) {
    this.positionType = positionType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxLot taxLot = (TaxLot) o;
    return Objects.equals(this.originalPurchaseDate, taxLot.originalPurchaseDate) &&
        Objects.equals(this.quantity, taxLot.quantity) &&
        Objects.equals(this.purchasedPrice, taxLot.purchasedPrice) &&
        Objects.equals(this.costBasis, taxLot.costBasis) &&
        Objects.equals(this.currentValue, taxLot.currentValue) &&
        Objects.equals(this.positionType, taxLot.positionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(originalPurchaseDate, quantity, purchasedPrice, costBasis, currentValue, positionType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxLot {\n");
    
    sb.append("    originalPurchaseDate: ").append(toIndentedString(originalPurchaseDate)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    purchasedPrice: ").append(toIndentedString(purchasedPrice)).append("\n");
    sb.append("    costBasis: ").append(toIndentedString(costBasis)).append("\n");
    sb.append("    currentValue: ").append(toIndentedString(currentValue)).append("\n");
    sb.append("    positionType: ").append(toIndentedString(positionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
