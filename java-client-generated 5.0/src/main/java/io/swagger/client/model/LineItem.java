/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HateoasLinks;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * A line item within a transaction
 */
@Schema(description = "A line item within a transaction")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class LineItem {
  @SerializedName("description")
  private String description = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("checkNumber")
  private Integer checkNumber = null;

  @SerializedName("memo")
  private String memo = null;

  @SerializedName("reference")
  private String reference = null;

  @SerializedName("imageIds")
  private List<String> imageIds = null;

  @SerializedName("links")
  private HateoasLinks links = null;

  public LineItem description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the line item
   * @return description
  **/
  @Schema(description = "The description of the line item")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public LineItem amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The amount of money attributable to this line item
   * @return amount
  **/
  @Schema(description = "The amount of money attributable to this line item")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public LineItem checkNumber(Integer checkNumber) {
    this.checkNumber = checkNumber;
    return this;
  }

   /**
   * Check number
   * @return checkNumber
  **/
  @Schema(description = "Check number")
  public Integer getCheckNumber() {
    return checkNumber;
  }

  public void setCheckNumber(Integer checkNumber) {
    this.checkNumber = checkNumber;
  }

  public LineItem memo(String memo) {
    this.memo = memo;
    return this;
  }

   /**
   * Get memo
   * @return memo
  **/
  @Schema(description = "")
  public String getMemo() {
    return memo;
  }

  public void setMemo(String memo) {
    this.memo = memo;
  }

  public LineItem reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * A reference number
   * @return reference
  **/
  @Schema(description = "A reference number")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public LineItem imageIds(List<String> imageIds) {
    this.imageIds = imageIds;
    return this;
  }

  public LineItem addImageIdsItem(String imageIdsItem) {
    if (this.imageIds == null) {
      this.imageIds = new ArrayList<String>();
    }
    this.imageIds.add(imageIdsItem);
    return this;
  }

   /**
   * Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt
   * @return imageIds
  **/
  @Schema(description = "Array of image identifiers (unique to transaction) used to retrieve images of check or transaction receipt")
  public List<String> getImageIds() {
    return imageIds;
  }

  public void setImageIds(List<String> imageIds) {
    this.imageIds = imageIds;
  }

  public LineItem links(HateoasLinks links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public HateoasLinks getLinks() {
    return links;
  }

  public void setLinks(HateoasLinks links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LineItem lineItem = (LineItem) o;
    return Objects.equals(this.description, lineItem.description) &&
        Objects.equals(this.amount, lineItem.amount) &&
        Objects.equals(this.checkNumber, lineItem.checkNumber) &&
        Objects.equals(this.memo, lineItem.memo) &&
        Objects.equals(this.reference, lineItem.reference) &&
        Objects.equals(this.imageIds, lineItem.imageIds) &&
        Objects.equals(this.links, lineItem.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, amount, checkNumber, memo, reference, imageIds, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LineItem {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    checkNumber: ").append(toIndentedString(checkNumber)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    imageIds: ").append(toIndentedString(imageIds)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
