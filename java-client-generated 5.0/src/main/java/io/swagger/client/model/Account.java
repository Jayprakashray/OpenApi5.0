/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AccountBillPayStatus;
import io.swagger.client.model.AccountContact;
import io.swagger.client.model.AccountDescriptor;
import io.swagger.client.model.AccountStatus;
import io.swagger.client.model.AccountType;
import io.swagger.client.model.BalanceType;
import io.swagger.client.model.Currency;
import io.swagger.client.model.Error;
import io.swagger.client.model.FiAttribute;
import io.swagger.client.model.InterestRateType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
/**
 * An abstract account entity that concrete account entities extend
 */
@Schema(description = "An abstract account entity that concrete account entities extend")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class Account extends AccountDescriptor {
  @SerializedName("parentAccountId")
  private String parentAccountId = null;

  @SerializedName("lineOfBusiness")
  private String lineOfBusiness = null;

  @SerializedName("routingTransitNumber")
  private String routingTransitNumber = null;

  @SerializedName("balanceType")
  private BalanceType balanceType = null;

  @SerializedName("contact")
  private AccountContact contact = null;

  @SerializedName("interestRate")
  private BigDecimal interestRate = null;

  @SerializedName("interestRateType")
  private InterestRateType interestRateType = null;

  @SerializedName("interestRateAsOf")
  private OffsetDateTime interestRateAsOf = null;

  @SerializedName("priorInterestRate")
  private BigDecimal priorInterestRate = null;

  @SerializedName("transferIn")
  private Boolean transferIn = null;

  @SerializedName("transferOut")
  private Boolean transferOut = null;

  @SerializedName("billPayStatus")
  private AccountBillPayStatus billPayStatus = null;

  @SerializedName("micrNumber")
  private String micrNumber = null;

  @SerializedName("lastActivityDate")
  private LocalDate lastActivityDate = null;

  @SerializedName("rewardProgramId")
  private String rewardProgramId = null;

  @SerializedName("transactionsIncluded")
  private Boolean transactionsIncluded = null;

  public Account parentAccountId(String parentAccountId) {
    this.parentAccountId = parentAccountId;
    return this;
  }

   /**
   * Get parentAccountId
   * @return parentAccountId
  **/
  @Schema(description = "")
  public String getParentAccountId() {
    return parentAccountId;
  }

  public void setParentAccountId(String parentAccountId) {
    this.parentAccountId = parentAccountId;
  }

  public Account lineOfBusiness(String lineOfBusiness) {
    this.lineOfBusiness = lineOfBusiness;
    return this;
  }

   /**
   * The line of business, such as consumer, consumer joint, small business, corporate, etc.
   * @return lineOfBusiness
  **/
  @Schema(description = "The line of business, such as consumer, consumer joint, small business, corporate, etc.")
  public String getLineOfBusiness() {
    return lineOfBusiness;
  }

  public void setLineOfBusiness(String lineOfBusiness) {
    this.lineOfBusiness = lineOfBusiness;
  }

  public Account routingTransitNumber(String routingTransitNumber) {
    this.routingTransitNumber = routingTransitNumber;
    return this;
  }

   /**
   * Routing transit number (RTN) associated with account number at owning institution
   * @return routingTransitNumber
  **/
  @Schema(description = "Routing transit number (RTN) associated with account number at owning institution")
  public String getRoutingTransitNumber() {
    return routingTransitNumber;
  }

  public void setRoutingTransitNumber(String routingTransitNumber) {
    this.routingTransitNumber = routingTransitNumber;
  }

  public Account balanceType(BalanceType balanceType) {
    this.balanceType = balanceType;
    return this;
  }

   /**
   * Get balanceType
   * @return balanceType
  **/
  @Schema(description = "")
  public BalanceType getBalanceType() {
    return balanceType;
  }

  public void setBalanceType(BalanceType balanceType) {
    this.balanceType = balanceType;
  }

  public Account contact(AccountContact contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(description = "")
  public AccountContact getContact() {
    return contact;
  }

  public void setContact(AccountContact contact) {
    this.contact = contact;
  }

  public Account interestRate(BigDecimal interestRate) {
    this.interestRate = interestRate;
    return this;
  }

   /**
   * Interest Rate of Account
   * @return interestRate
  **/
  @Schema(description = "Interest Rate of Account")
  public BigDecimal getInterestRate() {
    return interestRate;
  }

  public void setInterestRate(BigDecimal interestRate) {
    this.interestRate = interestRate;
  }

  public Account interestRateType(InterestRateType interestRateType) {
    this.interestRateType = interestRateType;
    return this;
  }

   /**
   * Get interestRateType
   * @return interestRateType
  **/
  @Schema(description = "")
  public InterestRateType getInterestRateType() {
    return interestRateType;
  }

  public void setInterestRateType(InterestRateType interestRateType) {
    this.interestRateType = interestRateType;
  }

  public Account interestRateAsOf(OffsetDateTime interestRateAsOf) {
    this.interestRateAsOf = interestRateAsOf;
    return this;
  }

   /**
   * Get interestRateAsOf
   * @return interestRateAsOf
  **/
  @Schema(description = "")
  public OffsetDateTime getInterestRateAsOf() {
    return interestRateAsOf;
  }

  public void setInterestRateAsOf(OffsetDateTime interestRateAsOf) {
    this.interestRateAsOf = interestRateAsOf;
  }

  public Account priorInterestRate(BigDecimal priorInterestRate) {
    this.priorInterestRate = priorInterestRate;
    return this;
  }

   /**
   * Previous Interest Rate of Account
   * @return priorInterestRate
  **/
  @Schema(description = "Previous Interest Rate of Account")
  public BigDecimal getPriorInterestRate() {
    return priorInterestRate;
  }

  public void setPriorInterestRate(BigDecimal priorInterestRate) {
    this.priorInterestRate = priorInterestRate;
  }

  public Account transferIn(Boolean transferIn) {
    this.transferIn = transferIn;
    return this;
  }

   /**
   * Account is eligible for incoming transfers
   * @return transferIn
  **/
  @Schema(description = "Account is eligible for incoming transfers")
  public Boolean isTransferIn() {
    return transferIn;
  }

  public void setTransferIn(Boolean transferIn) {
    this.transferIn = transferIn;
  }

  public Account transferOut(Boolean transferOut) {
    this.transferOut = transferOut;
    return this;
  }

   /**
   * Account is eligible for outgoing transfers
   * @return transferOut
  **/
  @Schema(description = "Account is eligible for outgoing transfers")
  public Boolean isTransferOut() {
    return transferOut;
  }

  public void setTransferOut(Boolean transferOut) {
    this.transferOut = transferOut;
  }

  public Account billPayStatus(AccountBillPayStatus billPayStatus) {
    this.billPayStatus = billPayStatus;
    return this;
  }

   /**
   * Get billPayStatus
   * @return billPayStatus
  **/
  @Schema(description = "")
  public AccountBillPayStatus getBillPayStatus() {
    return billPayStatus;
  }

  public void setBillPayStatus(AccountBillPayStatus billPayStatus) {
    this.billPayStatus = billPayStatus;
  }

  public Account micrNumber(String micrNumber) {
    this.micrNumber = micrNumber;
    return this;
  }

   /**
   * Get micrNumber
   * @return micrNumber
  **/
  @Schema(description = "")
  public String getMicrNumber() {
    return micrNumber;
  }

  public void setMicrNumber(String micrNumber) {
    this.micrNumber = micrNumber;
  }

  public Account lastActivityDate(LocalDate lastActivityDate) {
    this.lastActivityDate = lastActivityDate;
    return this;
  }

   /**
   * Get lastActivityDate
   * @return lastActivityDate
  **/
  @Schema(description = "")
  public LocalDate getLastActivityDate() {
    return lastActivityDate;
  }

  public void setLastActivityDate(LocalDate lastActivityDate) {
    this.lastActivityDate = lastActivityDate;
  }

  public Account rewardProgramId(String rewardProgramId) {
    this.rewardProgramId = rewardProgramId;
    return this;
  }

   /**
   * Get rewardProgramId
   * @return rewardProgramId
  **/
  @Schema(description = "")
  public String getRewardProgramId() {
    return rewardProgramId;
  }

  public void setRewardProgramId(String rewardProgramId) {
    this.rewardProgramId = rewardProgramId;
  }

  public Account transactionsIncluded(Boolean transactionsIncluded) {
    this.transactionsIncluded = transactionsIncluded;
    return this;
  }

   /**
   * Default is false. If present and true, a call to retrieve transactions will not return any further details about this account. This is an optimization that allows an FDX API server to return transactions and account details in a single call
   * @return transactionsIncluded
  **/
  @Schema(description = "Default is false. If present and true, a call to retrieve transactions will not return any further details about this account. This is an optimization that allows an FDX API server to return transactions and account details in a single call")
  public Boolean isTransactionsIncluded() {
    return transactionsIncluded;
  }

  public void setTransactionsIncluded(Boolean transactionsIncluded) {
    this.transactionsIncluded = transactionsIncluded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return Objects.equals(this.parentAccountId, account.parentAccountId) &&
        Objects.equals(this.lineOfBusiness, account.lineOfBusiness) &&
        Objects.equals(this.routingTransitNumber, account.routingTransitNumber) &&
        Objects.equals(this.balanceType, account.balanceType) &&
        Objects.equals(this.contact, account.contact) &&
        Objects.equals(this.interestRate, account.interestRate) &&
        Objects.equals(this.interestRateType, account.interestRateType) &&
        Objects.equals(this.interestRateAsOf, account.interestRateAsOf) &&
        Objects.equals(this.priorInterestRate, account.priorInterestRate) &&
        Objects.equals(this.transferIn, account.transferIn) &&
        Objects.equals(this.transferOut, account.transferOut) &&
        Objects.equals(this.billPayStatus, account.billPayStatus) &&
        Objects.equals(this.micrNumber, account.micrNumber) &&
        Objects.equals(this.lastActivityDate, account.lastActivityDate) &&
        Objects.equals(this.rewardProgramId, account.rewardProgramId) &&
        Objects.equals(this.transactionsIncluded, account.transactionsIncluded) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parentAccountId, lineOfBusiness, routingTransitNumber, balanceType, contact, interestRate, interestRateType, interestRateAsOf, priorInterestRate, transferIn, transferOut, billPayStatus, micrNumber, lastActivityDate, rewardProgramId, transactionsIncluded, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    parentAccountId: ").append(toIndentedString(parentAccountId)).append("\n");
    sb.append("    lineOfBusiness: ").append(toIndentedString(lineOfBusiness)).append("\n");
    sb.append("    routingTransitNumber: ").append(toIndentedString(routingTransitNumber)).append("\n");
    sb.append("    balanceType: ").append(toIndentedString(balanceType)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    interestRateType: ").append(toIndentedString(interestRateType)).append("\n");
    sb.append("    interestRateAsOf: ").append(toIndentedString(interestRateAsOf)).append("\n");
    sb.append("    priorInterestRate: ").append(toIndentedString(priorInterestRate)).append("\n");
    sb.append("    transferIn: ").append(toIndentedString(transferIn)).append("\n");
    sb.append("    transferOut: ").append(toIndentedString(transferOut)).append("\n");
    sb.append("    billPayStatus: ").append(toIndentedString(billPayStatus)).append("\n");
    sb.append("    micrNumber: ").append(toIndentedString(micrNumber)).append("\n");
    sb.append("    lastActivityDate: ").append(toIndentedString(lastActivityDate)).append("\n");
    sb.append("    rewardProgramId: ").append(toIndentedString(rewardProgramId)).append("\n");
    sb.append("    transactionsIncluded: ").append(toIndentedString(transactionsIncluded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
