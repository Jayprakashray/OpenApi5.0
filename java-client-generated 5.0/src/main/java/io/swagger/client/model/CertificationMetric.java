/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.OperationId;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * A single certification performance metric
 */
@Schema(description = "A single certification performance metric")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class CertificationMetric {
  @SerializedName("reportStartTimestamp")
  private OffsetDateTime reportStartTimestamp = null;

  @SerializedName("reportEndTimestamp")
  private OffsetDateTime reportEndTimestamp = null;

  @SerializedName("metricsName")
  private String metricsName = null;

  @SerializedName("operationIds")
  private List<OperationId> operationIds = null;

  @SerializedName("responseTimeAverage")
  private BigDecimal responseTimeAverage = null;

  @SerializedName("averageUpTime")
  private BigDecimal averageUpTime = null;

  @SerializedName("reportTimestamp")
  private OffsetDateTime reportTimestamp = null;

  public CertificationMetric reportStartTimestamp(OffsetDateTime reportStartTimestamp) {
    this.reportStartTimestamp = reportStartTimestamp;
    return this;
  }

   /**
   * Get reportStartTimestamp
   * @return reportStartTimestamp
  **/
  @Schema(description = "")
  public OffsetDateTime getReportStartTimestamp() {
    return reportStartTimestamp;
  }

  public void setReportStartTimestamp(OffsetDateTime reportStartTimestamp) {
    this.reportStartTimestamp = reportStartTimestamp;
  }

  public CertificationMetric reportEndTimestamp(OffsetDateTime reportEndTimestamp) {
    this.reportEndTimestamp = reportEndTimestamp;
    return this;
  }

   /**
   * Get reportEndTimestamp
   * @return reportEndTimestamp
  **/
  @Schema(description = "")
  public OffsetDateTime getReportEndTimestamp() {
    return reportEndTimestamp;
  }

  public void setReportEndTimestamp(OffsetDateTime reportEndTimestamp) {
    this.reportEndTimestamp = reportEndTimestamp;
  }

  public CertificationMetric metricsName(String metricsName) {
    this.metricsName = metricsName;
    return this;
  }

   /**
   * Any provider descriptive name for the measurement. Optional, can be omitted if operationIds are returned
   * @return metricsName
  **/
  @Schema(description = "Any provider descriptive name for the measurement. Optional, can be omitted if operationIds are returned")
  public String getMetricsName() {
    return metricsName;
  }

  public void setMetricsName(String metricsName) {
    this.metricsName = metricsName;
  }

  public CertificationMetric operationIds(List<OperationId> operationIds) {
    this.operationIds = operationIds;
    return this;
  }

  public CertificationMetric addOperationIdsItem(OperationId operationIdsItem) {
    if (this.operationIds == null) {
      this.operationIds = new ArrayList<OperationId>();
    }
    this.operationIds.add(operationIdsItem);
    return this;
  }

   /**
   * One or more Operation IDs for which these metrics apply. Optional, can be omitted if metricsName is returned
   * @return operationIds
  **/
  @Schema(description = "One or more Operation IDs for which these metrics apply. Optional, can be omitted if metricsName is returned")
  public List<OperationId> getOperationIds() {
    return operationIds;
  }

  public void setOperationIds(List<OperationId> operationIds) {
    this.operationIds = operationIds;
  }

  public CertificationMetric responseTimeAverage(BigDecimal responseTimeAverage) {
    this.responseTimeAverage = responseTimeAverage;
    return this;
  }

   /**
   * The self-reported average response time in milliseconds for all combined data responses
   * @return responseTimeAverage
  **/
  @Schema(description = "The self-reported average response time in milliseconds for all combined data responses")
  public BigDecimal getResponseTimeAverage() {
    return responseTimeAverage;
  }

  public void setResponseTimeAverage(BigDecimal responseTimeAverage) {
    this.responseTimeAverage = responseTimeAverage;
  }

  public CertificationMetric averageUpTime(BigDecimal averageUpTime) {
    this.averageUpTime = averageUpTime;
    return this;
  }

   /**
   * See the Certification Performance section that describes how this measurement will be calculated, defines the % of availability during the measurement
   * @return averageUpTime
  **/
  @Schema(description = "See the Certification Performance section that describes how this measurement will be calculated, defines the % of availability during the measurement")
  public BigDecimal getAverageUpTime() {
    return averageUpTime;
  }

  public void setAverageUpTime(BigDecimal averageUpTime) {
    this.averageUpTime = averageUpTime;
  }

  public CertificationMetric reportTimestamp(OffsetDateTime reportTimestamp) {
    this.reportTimestamp = reportTimestamp;
    return this;
  }

   /**
   * Get reportTimestamp
   * @return reportTimestamp
  **/
  @Schema(description = "")
  public OffsetDateTime getReportTimestamp() {
    return reportTimestamp;
  }

  public void setReportTimestamp(OffsetDateTime reportTimestamp) {
    this.reportTimestamp = reportTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificationMetric certificationMetric = (CertificationMetric) o;
    return Objects.equals(this.reportStartTimestamp, certificationMetric.reportStartTimestamp) &&
        Objects.equals(this.reportEndTimestamp, certificationMetric.reportEndTimestamp) &&
        Objects.equals(this.metricsName, certificationMetric.metricsName) &&
        Objects.equals(this.operationIds, certificationMetric.operationIds) &&
        Objects.equals(this.responseTimeAverage, certificationMetric.responseTimeAverage) &&
        Objects.equals(this.averageUpTime, certificationMetric.averageUpTime) &&
        Objects.equals(this.reportTimestamp, certificationMetric.reportTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportStartTimestamp, reportEndTimestamp, metricsName, operationIds, responseTimeAverage, averageUpTime, reportTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificationMetric {\n");
    
    sb.append("    reportStartTimestamp: ").append(toIndentedString(reportStartTimestamp)).append("\n");
    sb.append("    reportEndTimestamp: ").append(toIndentedString(reportEndTimestamp)).append("\n");
    sb.append("    metricsName: ").append(toIndentedString(metricsName)).append("\n");
    sb.append("    operationIds: ").append(toIndentedString(operationIds)).append("\n");
    sb.append("    responseTimeAverage: ").append(toIndentedString(responseTimeAverage)).append("\n");
    sb.append("    averageUpTime: ").append(toIndentedString(averageUpTime)).append("\n");
    sb.append("    reportTimestamp: ").append(toIndentedString(reportTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
