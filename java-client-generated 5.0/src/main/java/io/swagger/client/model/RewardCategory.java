/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FiAttribute;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * Reward category used to calculate rewards on a transaction
 */
@Schema(description = "Reward category used to calculate rewards on a transaction")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class RewardCategory {
  @SerializedName("rewardProgramId")
  private String rewardProgramId = null;

  @SerializedName("categoryName")
  private String categoryName = null;

  @SerializedName("categoryId")
  private String categoryId = null;

  @SerializedName("multiplier")
  private BigDecimal multiplier = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("fiAttributes")
  private List<FiAttribute> fiAttributes = null;

  public RewardCategory rewardProgramId(String rewardProgramId) {
    this.rewardProgramId = rewardProgramId;
    return this;
  }

   /**
   * Get rewardProgramId
   * @return rewardProgramId
  **/
  @Schema(description = "")
  public String getRewardProgramId() {
    return rewardProgramId;
  }

  public void setRewardProgramId(String rewardProgramId) {
    this.rewardProgramId = rewardProgramId;
  }

  public RewardCategory categoryName(String categoryName) {
    this.categoryName = categoryName;
    return this;
  }

   /**
   * Reward category name
   * @return categoryName
  **/
  @Schema(description = "Reward category name")
  public String getCategoryName() {
    return categoryName;
  }

  public void setCategoryName(String categoryName) {
    this.categoryName = categoryName;
  }

  public RewardCategory categoryId(String categoryId) {
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Get categoryId
   * @return categoryId
  **/
  @Schema(description = "")
  public String getCategoryId() {
    return categoryId;
  }

  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }

  public RewardCategory multiplier(BigDecimal multiplier) {
    this.multiplier = multiplier;
    return this;
  }

   /**
   * Factor used to calculate rewards accrued
   * minimum: 0
   * @return multiplier
  **/
  @Schema(description = "Factor used to calculate rewards accrued")
  public BigDecimal getMultiplier() {
    return multiplier;
  }

  public void setMultiplier(BigDecimal multiplier) {
    this.multiplier = multiplier;
  }

  public RewardCategory description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the reward category
   * @return description
  **/
  @Schema(description = "Description of the reward category")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public RewardCategory fiAttributes(List<FiAttribute> fiAttributes) {
    this.fiAttributes = fiAttributes;
    return this;
  }

  public RewardCategory addFiAttributesItem(FiAttribute fiAttributesItem) {
    if (this.fiAttributes == null) {
      this.fiAttributes = new ArrayList<FiAttribute>();
    }
    this.fiAttributes.add(fiAttributesItem);
    return this;
  }

   /**
   * Array of FI-specific attributes
   * @return fiAttributes
  **/
  @Schema(description = "Array of FI-specific attributes")
  public List<FiAttribute> getFiAttributes() {
    return fiAttributes;
  }

  public void setFiAttributes(List<FiAttribute> fiAttributes) {
    this.fiAttributes = fiAttributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RewardCategory rewardCategory = (RewardCategory) o;
    return Objects.equals(this.rewardProgramId, rewardCategory.rewardProgramId) &&
        Objects.equals(this.categoryName, rewardCategory.categoryName) &&
        Objects.equals(this.categoryId, rewardCategory.categoryId) &&
        Objects.equals(this.multiplier, rewardCategory.multiplier) &&
        Objects.equals(this.description, rewardCategory.description) &&
        Objects.equals(this.fiAttributes, rewardCategory.fiAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rewardProgramId, categoryName, categoryId, multiplier, description, fiAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RewardCategory {\n");
    
    sb.append("    rewardProgramId: ").append(toIndentedString(rewardProgramId)).append("\n");
    sb.append("    categoryName: ").append(toIndentedString(categoryName)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    multiplier: ").append(toIndentedString(multiplier)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fiAttributes: ").append(toIndentedString(fiAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
