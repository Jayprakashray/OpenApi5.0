/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The type of an investment transaction
 */
@JsonAdapter(InvestmentTransactionType.Adapter.class)
public enum InvestmentTransactionType {
  ADJUSTMENT("ADJUSTMENT"),
  ATM("ATM"),
  CASH("CASH"),
  CHECK("CHECK"),
  CLOSURE("CLOSURE"),
  CLOSUREOPT("CLOSUREOPT"),
  CONTRIBUTION("CONTRIBUTION"),
  DEP("DEP"),
  DEPOSIT("DEPOSIT"),
  DIRECTDEBIT("DIRECTDEBIT"),
  DIRECTDEP("DIRECTDEP"),
  DIV("DIV"),
  DIVIDEND("DIVIDEND"),
  DIVIDENDREINVEST("DIVIDENDREINVEST"),
  EXPENSE("EXPENSE"),
  FEE("FEE"),
  INCOME("INCOME"),
  INTEREST("INTEREST"),
  INVEXPENSE("INVEXPENSE"),
  JRNLFUND("JRNLFUND"),
  JRNLSEC("JRNLSEC"),
  MARGININTEREST("MARGININTEREST"),
  OPTIONEXERCISE("OPTIONEXERCISE"),
  OPTIONEXPIRATION("OPTIONEXPIRATION"),
  OTHER("OTHER"),
  PAYMENT("PAYMENT"),
  POS("POS"),
  PURCHASED("PURCHASED"),
  PURCHASEDTOCOVER("PURCHASEDTOCOVER"),
  PURCHASETOCLOSE("PURCHASETOCLOSE"),
  PURCHASETOOPEN("PURCHASETOOPEN"),
  REINVESTOFINCOME("REINVESTOFINCOME"),
  REPEATPMT("REPEATPMT"),
  RETURNOFCAPITAL("RETURNOFCAPITAL"),
  SOLD("SOLD"),
  SOLDTOCLOSE("SOLDTOCLOSE"),
  SOLDTOOPEN("SOLDTOOPEN"),
  SPLIT("SPLIT"),
  SRVCHG("SRVCHG"),
  TRANSFER("TRANSFER"),
  XFER("XFER");

  private String value;

  InvestmentTransactionType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static InvestmentTransactionType fromValue(String input) {
    for (InvestmentTransactionType b : InvestmentTransactionType.values()) {
      if (b.value.equals(input)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<InvestmentTransactionType> {
    @Override
    public void write(final JsonWriter jsonWriter, final InvestmentTransactionType enumeration) throws IOException {
      jsonWriter.value(String.valueOf(enumeration.getValue()));
    }

    @Override
    public InvestmentTransactionType read(final JsonReader jsonReader) throws IOException {
      Object value = jsonReader.nextString();
      return InvestmentTransactionType.fromValue((String)(value));
    }
  }
}
