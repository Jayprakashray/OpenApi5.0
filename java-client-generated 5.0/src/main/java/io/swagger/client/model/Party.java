/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PartyRegistry;
import io.swagger.client.model.PartyType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * FDX Participant - an entity or person that is a part of a FDX API transaction
 */
@Schema(description = "FDX Participant - an entity or person that is a part of a FDX API transaction")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class Party {
  @SerializedName("name")
  private String name = null;

  @SerializedName("type")
  private PartyType type = null;

  @SerializedName("homeUri")
  private String homeUri = null;

  @SerializedName("logoUri")
  private String logoUri = null;

  @SerializedName("registry")
  private PartyRegistry registry = null;

  @SerializedName("registeredEntityName")
  private String registeredEntityName = null;

  @SerializedName("registeredEntityId")
  private String registeredEntityId = null;

  public Party name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Human recognizable common name
   * @return name
  **/
  @Schema(required = true, description = "Human recognizable common name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Party type(PartyType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public PartyType getType() {
    return type;
  }

  public void setType(PartyType type) {
    this.type = type;
  }

  public Party homeUri(String homeUri) {
    this.homeUri = homeUri;
    return this;
  }

   /**
   * URI for party, where an end user could learn more about the company or application involved in the data sharing chain
   * @return homeUri
  **/
  @Schema(description = "URI for party, where an end user could learn more about the company or application involved in the data sharing chain")
  public String getHomeUri() {
    return homeUri;
  }

  public void setHomeUri(String homeUri) {
    this.homeUri = homeUri;
  }

  public Party logoUri(String logoUri) {
    this.logoUri = logoUri;
    return this;
  }

   /**
   * URI for a logo asset to be displayed to the end user
   * @return logoUri
  **/
  @Schema(description = "URI for a logo asset to be displayed to the end user")
  public String getLogoUri() {
    return logoUri;
  }

  public void setLogoUri(String logoUri) {
    this.logoUri = logoUri;
  }

  public Party registry(PartyRegistry registry) {
    this.registry = registry;
    return this;
  }

   /**
   * Get registry
   * @return registry
  **/
  @Schema(description = "")
  public PartyRegistry getRegistry() {
    return registry;
  }

  public void setRegistry(PartyRegistry registry) {
    this.registry = registry;
  }

  public Party registeredEntityName(String registeredEntityName) {
    this.registeredEntityName = registeredEntityName;
    return this;
  }

   /**
   * Registered name of party
   * @return registeredEntityName
  **/
  @Schema(description = "Registered name of party")
  public String getRegisteredEntityName() {
    return registeredEntityName;
  }

  public void setRegisteredEntityName(String registeredEntityName) {
    this.registeredEntityName = registeredEntityName;
  }

  public Party registeredEntityId(String registeredEntityId) {
    this.registeredEntityId = registeredEntityId;
    return this;
  }

   /**
   * Registered id of party
   * @return registeredEntityId
  **/
  @Schema(description = "Registered id of party")
  public String getRegisteredEntityId() {
    return registeredEntityId;
  }

  public void setRegisteredEntityId(String registeredEntityId) {
    this.registeredEntityId = registeredEntityId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Party party = (Party) o;
    return Objects.equals(this.name, party.name) &&
        Objects.equals(this.type, party.type) &&
        Objects.equals(this.homeUri, party.homeUri) &&
        Objects.equals(this.logoUri, party.logoUri) &&
        Objects.equals(this.registry, party.registry) &&
        Objects.equals(this.registeredEntityName, party.registeredEntityName) &&
        Objects.equals(this.registeredEntityId, party.registeredEntityId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, homeUri, logoUri, registry, registeredEntityName, registeredEntityId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Party {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    homeUri: ").append(toIndentedString(homeUri)).append("\n");
    sb.append("    logoUri: ").append(toIndentedString(logoUri)).append("\n");
    sb.append("    registry: ").append(toIndentedString(registry)).append("\n");
    sb.append("    registeredEntityName: ").append(toIndentedString(registeredEntityName)).append("\n");
    sb.append("    registeredEntityId: ").append(toIndentedString(registeredEntityId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
