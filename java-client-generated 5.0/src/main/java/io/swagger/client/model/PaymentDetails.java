/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Details of this payment
 */
@Schema(description = "Details of this payment")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class PaymentDetails {
  @SerializedName("principalAmount")
  private BigDecimal principalAmount = null;

  @SerializedName("interestAmount")
  private BigDecimal interestAmount = null;

  @SerializedName("insuranceAmount")
  private BigDecimal insuranceAmount = null;

  @SerializedName("escrowAmount")
  private BigDecimal escrowAmount = null;

  @SerializedName("pmiAmount")
  private BigDecimal pmiAmount = null;

  @SerializedName("feesAmount")
  private BigDecimal feesAmount = null;

  public PaymentDetails principalAmount(BigDecimal principalAmount) {
    this.principalAmount = principalAmount;
    return this;
  }

   /**
   * The amount of payment applied to principal
   * @return principalAmount
  **/
  @Schema(description = "The amount of payment applied to principal")
  public BigDecimal getPrincipalAmount() {
    return principalAmount;
  }

  public void setPrincipalAmount(BigDecimal principalAmount) {
    this.principalAmount = principalAmount;
  }

  public PaymentDetails interestAmount(BigDecimal interestAmount) {
    this.interestAmount = interestAmount;
    return this;
  }

   /**
   * The amount of payment applied to interest
   * @return interestAmount
  **/
  @Schema(description = "The amount of payment applied to interest")
  public BigDecimal getInterestAmount() {
    return interestAmount;
  }

  public void setInterestAmount(BigDecimal interestAmount) {
    this.interestAmount = interestAmount;
  }

  public PaymentDetails insuranceAmount(BigDecimal insuranceAmount) {
    this.insuranceAmount = insuranceAmount;
    return this;
  }

   /**
   * The amount of payment applied to life/health/accident insurance on the loan
   * @return insuranceAmount
  **/
  @Schema(description = "The amount of payment applied to life/health/accident insurance on the loan")
  public BigDecimal getInsuranceAmount() {
    return insuranceAmount;
  }

  public void setInsuranceAmount(BigDecimal insuranceAmount) {
    this.insuranceAmount = insuranceAmount;
  }

  public PaymentDetails escrowAmount(BigDecimal escrowAmount) {
    this.escrowAmount = escrowAmount;
    return this;
  }

   /**
   * The amount of payment applied to escrow
   * @return escrowAmount
  **/
  @Schema(description = "The amount of payment applied to escrow")
  public BigDecimal getEscrowAmount() {
    return escrowAmount;
  }

  public void setEscrowAmount(BigDecimal escrowAmount) {
    this.escrowAmount = escrowAmount;
  }

  public PaymentDetails pmiAmount(BigDecimal pmiAmount) {
    this.pmiAmount = pmiAmount;
    return this;
  }

   /**
   * The amount of payment applied to PMI
   * @return pmiAmount
  **/
  @Schema(description = "The amount of payment applied to PMI")
  public BigDecimal getPmiAmount() {
    return pmiAmount;
  }

  public void setPmiAmount(BigDecimal pmiAmount) {
    this.pmiAmount = pmiAmount;
  }

  public PaymentDetails feesAmount(BigDecimal feesAmount) {
    this.feesAmount = feesAmount;
    return this;
  }

   /**
   * The amount of payment applied to fees
   * @return feesAmount
  **/
  @Schema(description = "The amount of payment applied to fees")
  public BigDecimal getFeesAmount() {
    return feesAmount;
  }

  public void setFeesAmount(BigDecimal feesAmount) {
    this.feesAmount = feesAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentDetails paymentDetails = (PaymentDetails) o;
    return Objects.equals(this.principalAmount, paymentDetails.principalAmount) &&
        Objects.equals(this.interestAmount, paymentDetails.interestAmount) &&
        Objects.equals(this.insuranceAmount, paymentDetails.insuranceAmount) &&
        Objects.equals(this.escrowAmount, paymentDetails.escrowAmount) &&
        Objects.equals(this.pmiAmount, paymentDetails.pmiAmount) &&
        Objects.equals(this.feesAmount, paymentDetails.feesAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(principalAmount, interestAmount, insuranceAmount, escrowAmount, pmiAmount, feesAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentDetails {\n");
    
    sb.append("    principalAmount: ").append(toIndentedString(principalAmount)).append("\n");
    sb.append("    interestAmount: ").append(toIndentedString(interestAmount)).append("\n");
    sb.append("    insuranceAmount: ").append(toIndentedString(insuranceAmount)).append("\n");
    sb.append("    escrowAmount: ").append(toIndentedString(escrowAmount)).append("\n");
    sb.append("    pmiAmount: ").append(toIndentedString(pmiAmount)).append("\n");
    sb.append("    feesAmount: ").append(toIndentedString(feesAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
