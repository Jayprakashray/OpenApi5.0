/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Account;
import io.swagger.client.model.AccountBillPayStatus;
import io.swagger.client.model.AccountContact;
import io.swagger.client.model.BalanceType;
import io.swagger.client.model.InterestRateType;
import io.swagger.client.model.PayoutMode;
import io.swagger.client.model.PayoutType;
import io.swagger.client.model.PeriodCertainType;
import io.swagger.client.model.PolicyProductType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;
/**
 * An annuity account type
 */
@Schema(description = "An annuity account type")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class AnnuityAccount extends Account {
  @SerializedName("annuityProductType")
  private Object annuityProductType = null;

  @SerializedName("annuityValueBasis")
  private Object annuityValueBasis = null;

  @SerializedName("paymentAmount")
  private BigDecimal paymentAmount = null;

  @SerializedName("paymentFrequency")
  private Object paymentFrequency = null;

  @SerializedName("paymentStartDate")
  private Object paymentStartDate = null;

  @SerializedName("paymentEndDate")
  private Object paymentEndDate = null;

  @SerializedName("totalPaymentCount")
  private BigDecimal totalPaymentCount = null;

  @SerializedName("netPresentValue")
  private BigDecimal netPresentValue = null;

  @SerializedName("annualIncrease")
  private BigDecimal annualIncrease = null;

  @SerializedName("annualIncreaseType")
  private Object annualIncreaseType = null;

  @SerializedName("periodCertainGuarantee")
  private Object periodCertainGuarantee = null;

  @SerializedName("payoutType")
  private PayoutType payoutType = null;

  @SerializedName("policyProductType")
  private PolicyProductType policyProductType = null;

  @SerializedName("payoutAmount")
  private BigDecimal payoutAmount = null;

  @SerializedName("payoutMode")
  private PayoutMode payoutMode = null;

  @SerializedName("payoutStartDate")
  private LocalDate payoutStartDate = null;

  @SerializedName("payoutEndDate")
  private LocalDate payoutEndDate = null;

  @SerializedName("numberModalPayouts")
  private Integer numberModalPayouts = null;

  @SerializedName("surrenderValue")
  private BigDecimal surrenderValue = null;

  @SerializedName("payoutChangePercentage")
  private BigDecimal payoutChangePercentage = null;

  @SerializedName("payoutChangeAmount")
  private BigDecimal payoutChangeAmount = null;

  @SerializedName("periodCertainType")
  private PeriodCertainType periodCertainType = null;

  public AnnuityAccount annuityProductType(Object annuityProductType) {
    this.annuityProductType = annuityProductType;
    return this;
  }

   /**
   * CURRENCY, SHARES. Deprecated, will be removed in v6.0
   * @return annuityProductType
  **/
  @Schema(description = "CURRENCY, SHARES. Deprecated, will be removed in v6.0")
  public Object getAnnuityProductType() {
    return annuityProductType;
  }

  public void setAnnuityProductType(Object annuityProductType) {
    this.annuityProductType = annuityProductType;
  }

  public AnnuityAccount annuityValueBasis(Object annuityValueBasis) {
    this.annuityValueBasis = annuityValueBasis;
    return this;
  }

   /**
   * FIXED, VARIABLE. Deprecated, will be removed in v6.0
   * @return annuityValueBasis
  **/
  @Schema(description = "FIXED, VARIABLE. Deprecated, will be removed in v6.0")
  public Object getAnnuityValueBasis() {
    return annuityValueBasis;
  }

  public void setAnnuityValueBasis(Object annuityValueBasis) {
    this.annuityValueBasis = annuityValueBasis;
  }

  public AnnuityAccount paymentAmount(BigDecimal paymentAmount) {
    this.paymentAmount = paymentAmount;
    return this;
  }

   /**
   * Amount of the recurring payment. Deprecated, will be removed in v6.0
   * @return paymentAmount
  **/
  @Schema(description = "Amount of the recurring payment. Deprecated, will be removed in v6.0")
  public BigDecimal getPaymentAmount() {
    return paymentAmount;
  }

  public void setPaymentAmount(BigDecimal paymentAmount) {
    this.paymentAmount = paymentAmount;
  }

  public AnnuityAccount paymentFrequency(Object paymentFrequency) {
    this.paymentFrequency = paymentFrequency;
    return this;
  }

   /**
   * ANNUALLY, BIWEEKLY, DAILY, MONTHLY, SEMIANNUALLY, SEMIMONTHLY, WEEKLY. Deprecated, will be removed in v6.0
   * @return paymentFrequency
  **/
  @Schema(description = "ANNUALLY, BIWEEKLY, DAILY, MONTHLY, SEMIANNUALLY, SEMIMONTHLY, WEEKLY. Deprecated, will be removed in v6.0")
  public Object getPaymentFrequency() {
    return paymentFrequency;
  }

  public void setPaymentFrequency(Object paymentFrequency) {
    this.paymentFrequency = paymentFrequency;
  }

  public AnnuityAccount paymentStartDate(Object paymentStartDate) {
    this.paymentStartDate = paymentStartDate;
    return this;
  }

   /**
   * Date of first payment; could be a future date. Deprecated, will be removed in v6.0
   * @return paymentStartDate
  **/
  @Schema(description = "Date of first payment; could be a future date. Deprecated, will be removed in v6.0")
  public Object getPaymentStartDate() {
    return paymentStartDate;
  }

  public void setPaymentStartDate(Object paymentStartDate) {
    this.paymentStartDate = paymentStartDate;
  }

  public AnnuityAccount paymentEndDate(Object paymentEndDate) {
    this.paymentEndDate = paymentEndDate;
    return this;
  }

   /**
   * Date last payment will be made. Deprecated, will be removed in v6.0
   * @return paymentEndDate
  **/
  @Schema(description = "Date last payment will be made. Deprecated, will be removed in v6.0")
  public Object getPaymentEndDate() {
    return paymentEndDate;
  }

  public void setPaymentEndDate(Object paymentEndDate) {
    this.paymentEndDate = paymentEndDate;
  }

  public AnnuityAccount totalPaymentCount(BigDecimal totalPaymentCount) {
    this.totalPaymentCount = totalPaymentCount;
    return this;
  }

   /**
   * Total number of payments that will be produced by the annuity. Deprecated, will be removed in v6.0
   * @return totalPaymentCount
  **/
  @Schema(description = "Total number of payments that will be produced by the annuity. Deprecated, will be removed in v6.0")
  public BigDecimal getTotalPaymentCount() {
    return totalPaymentCount;
  }

  public void setTotalPaymentCount(BigDecimal totalPaymentCount) {
    this.totalPaymentCount = totalPaymentCount;
  }

  public AnnuityAccount netPresentValue(BigDecimal netPresentValue) {
    this.netPresentValue = netPresentValue;
    return this;
  }

   /**
   * Surrender or cash balance value. Deprecated, will be removed in v6.0
   * @return netPresentValue
  **/
  @Schema(description = "Surrender or cash balance value. Deprecated, will be removed in v6.0")
  public BigDecimal getNetPresentValue() {
    return netPresentValue;
  }

  public void setNetPresentValue(BigDecimal netPresentValue) {
    this.netPresentValue = netPresentValue;
  }

  public AnnuityAccount annualIncrease(BigDecimal annualIncrease) {
    this.annualIncrease = annualIncrease;
    return this;
  }

   /**
   * Percent or dollar amount of annual payment increase. Deprecated, will be removed in v6.0
   * @return annualIncrease
  **/
  @Schema(description = "Percent or dollar amount of annual payment increase. Deprecated, will be removed in v6.0")
  public BigDecimal getAnnualIncrease() {
    return annualIncrease;
  }

  public void setAnnualIncrease(BigDecimal annualIncrease) {
    this.annualIncrease = annualIncrease;
  }

  public AnnuityAccount annualIncreaseType(Object annualIncreaseType) {
    this.annualIncreaseType = annualIncreaseType;
    return this;
  }

   /**
   * FIXED, PERCENT, DOLLAR. Deprecated, will be removed in v6.0
   * @return annualIncreaseType
  **/
  @Schema(description = "FIXED, PERCENT, DOLLAR. Deprecated, will be removed in v6.0")
  public Object getAnnualIncreaseType() {
    return annualIncreaseType;
  }

  public void setAnnualIncreaseType(Object annualIncreaseType) {
    this.annualIncreaseType = annualIncreaseType;
  }

  public AnnuityAccount periodCertainGuarantee(Object periodCertainGuarantee) {
    this.periodCertainGuarantee = periodCertainGuarantee;
    return this;
  }

   /**
   * NONE, 5-YEAR, 10-YEAR, 20-YEAR, 30-YEAR. Deprecated, will be removed in v6.0
   * @return periodCertainGuarantee
  **/
  @Schema(description = "NONE, 5-YEAR, 10-YEAR, 20-YEAR, 30-YEAR. Deprecated, will be removed in v6.0")
  public Object getPeriodCertainGuarantee() {
    return periodCertainGuarantee;
  }

  public void setPeriodCertainGuarantee(Object periodCertainGuarantee) {
    this.periodCertainGuarantee = periodCertainGuarantee;
  }

  public AnnuityAccount payoutType(PayoutType payoutType) {
    this.payoutType = payoutType;
    return this;
  }

   /**
   * Get payoutType
   * @return payoutType
  **/
  @Schema(description = "")
  public PayoutType getPayoutType() {
    return payoutType;
  }

  public void setPayoutType(PayoutType payoutType) {
    this.payoutType = payoutType;
  }

  public AnnuityAccount policyProductType(PolicyProductType policyProductType) {
    this.policyProductType = policyProductType;
    return this;
  }

   /**
   * Get policyProductType
   * @return policyProductType
  **/
  @Schema(description = "")
  public PolicyProductType getPolicyProductType() {
    return policyProductType;
  }

  public void setPolicyProductType(PolicyProductType policyProductType) {
    this.policyProductType = policyProductType;
  }

  public AnnuityAccount payoutAmount(BigDecimal payoutAmount) {
    this.payoutAmount = payoutAmount;
    return this;
  }

   /**
   * Amount paid out, based on mode frequency
   * @return payoutAmount
  **/
  @Schema(description = "Amount paid out, based on mode frequency")
  public BigDecimal getPayoutAmount() {
    return payoutAmount;
  }

  public void setPayoutAmount(BigDecimal payoutAmount) {
    this.payoutAmount = payoutAmount;
  }

  public AnnuityAccount payoutMode(PayoutMode payoutMode) {
    this.payoutMode = payoutMode;
    return this;
  }

   /**
   * Get payoutMode
   * @return payoutMode
  **/
  @Schema(description = "")
  public PayoutMode getPayoutMode() {
    return payoutMode;
  }

  public void setPayoutMode(PayoutMode payoutMode) {
    this.payoutMode = payoutMode;
  }

  public AnnuityAccount payoutStartDate(LocalDate payoutStartDate) {
    this.payoutStartDate = payoutStartDate;
    return this;
  }

   /**
   * Get payoutStartDate
   * @return payoutStartDate
  **/
  @Schema(description = "")
  public LocalDate getPayoutStartDate() {
    return payoutStartDate;
  }

  public void setPayoutStartDate(LocalDate payoutStartDate) {
    this.payoutStartDate = payoutStartDate;
  }

  public AnnuityAccount payoutEndDate(LocalDate payoutEndDate) {
    this.payoutEndDate = payoutEndDate;
    return this;
  }

   /**
   * Get payoutEndDate
   * @return payoutEndDate
  **/
  @Schema(description = "")
  public LocalDate getPayoutEndDate() {
    return payoutEndDate;
  }

  public void setPayoutEndDate(LocalDate payoutEndDate) {
    this.payoutEndDate = payoutEndDate;
  }

  public AnnuityAccount numberModalPayouts(Integer numberModalPayouts) {
    this.numberModalPayouts = numberModalPayouts;
    return this;
  }

   /**
   * Total number of payouts
   * @return numberModalPayouts
  **/
  @Schema(description = "Total number of payouts")
  public Integer getNumberModalPayouts() {
    return numberModalPayouts;
  }

  public void setNumberModalPayouts(Integer numberModalPayouts) {
    this.numberModalPayouts = numberModalPayouts;
  }

  public AnnuityAccount surrenderValue(BigDecimal surrenderValue) {
    this.surrenderValue = surrenderValue;
    return this;
  }

   /**
   * Cash surrender value (net) available if contract is surrendered
   * @return surrenderValue
  **/
  @Schema(description = "Cash surrender value (net) available if contract is surrendered")
  public BigDecimal getSurrenderValue() {
    return surrenderValue;
  }

  public void setSurrenderValue(BigDecimal surrenderValue) {
    this.surrenderValue = surrenderValue;
  }

  public AnnuityAccount payoutChangePercentage(BigDecimal payoutChangePercentage) {
    this.payoutChangePercentage = payoutChangePercentage;
    return this;
  }

   /**
   * Percentage of the accumulated value to be paid to the payee each year; used exclusive of payoutChangeAmount
   * @return payoutChangePercentage
  **/
  @Schema(description = "Percentage of the accumulated value to be paid to the payee each year; used exclusive of payoutChangeAmount")
  public BigDecimal getPayoutChangePercentage() {
    return payoutChangePercentage;
  }

  public void setPayoutChangePercentage(BigDecimal payoutChangePercentage) {
    this.payoutChangePercentage = payoutChangePercentage;
  }

  public AnnuityAccount payoutChangeAmount(BigDecimal payoutChangeAmount) {
    this.payoutChangeAmount = payoutChangeAmount;
    return this;
  }

   /**
   * Incremental modal amount (positive or negative) by which the payout amount will be changed; used exclusive of payoutPercentage
   * @return payoutChangeAmount
  **/
  @Schema(description = "Incremental modal amount (positive or negative) by which the payout amount will be changed; used exclusive of payoutPercentage")
  public BigDecimal getPayoutChangeAmount() {
    return payoutChangeAmount;
  }

  public void setPayoutChangeAmount(BigDecimal payoutChangeAmount) {
    this.payoutChangeAmount = payoutChangeAmount;
  }

  public AnnuityAccount periodCertainType(PeriodCertainType periodCertainType) {
    this.periodCertainType = periodCertainType;
    return this;
  }

   /**
   * Get periodCertainType
   * @return periodCertainType
  **/
  @Schema(description = "")
  public PeriodCertainType getPeriodCertainType() {
    return periodCertainType;
  }

  public void setPeriodCertainType(PeriodCertainType periodCertainType) {
    this.periodCertainType = periodCertainType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnuityAccount annuityAccount = (AnnuityAccount) o;
    return Objects.equals(this.annuityProductType, annuityAccount.annuityProductType) &&
        Objects.equals(this.annuityValueBasis, annuityAccount.annuityValueBasis) &&
        Objects.equals(this.paymentAmount, annuityAccount.paymentAmount) &&
        Objects.equals(this.paymentFrequency, annuityAccount.paymentFrequency) &&
        Objects.equals(this.paymentStartDate, annuityAccount.paymentStartDate) &&
        Objects.equals(this.paymentEndDate, annuityAccount.paymentEndDate) &&
        Objects.equals(this.totalPaymentCount, annuityAccount.totalPaymentCount) &&
        Objects.equals(this.netPresentValue, annuityAccount.netPresentValue) &&
        Objects.equals(this.annualIncrease, annuityAccount.annualIncrease) &&
        Objects.equals(this.annualIncreaseType, annuityAccount.annualIncreaseType) &&
        Objects.equals(this.periodCertainGuarantee, annuityAccount.periodCertainGuarantee) &&
        Objects.equals(this.payoutType, annuityAccount.payoutType) &&
        Objects.equals(this.policyProductType, annuityAccount.policyProductType) &&
        Objects.equals(this.payoutAmount, annuityAccount.payoutAmount) &&
        Objects.equals(this.payoutMode, annuityAccount.payoutMode) &&
        Objects.equals(this.payoutStartDate, annuityAccount.payoutStartDate) &&
        Objects.equals(this.payoutEndDate, annuityAccount.payoutEndDate) &&
        Objects.equals(this.numberModalPayouts, annuityAccount.numberModalPayouts) &&
        Objects.equals(this.surrenderValue, annuityAccount.surrenderValue) &&
        Objects.equals(this.payoutChangePercentage, annuityAccount.payoutChangePercentage) &&
        Objects.equals(this.payoutChangeAmount, annuityAccount.payoutChangeAmount) &&
        Objects.equals(this.periodCertainType, annuityAccount.periodCertainType) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annuityProductType, annuityValueBasis, paymentAmount, paymentFrequency, paymentStartDate, paymentEndDate, totalPaymentCount, netPresentValue, annualIncrease, annualIncreaseType, periodCertainGuarantee, payoutType, policyProductType, payoutAmount, payoutMode, payoutStartDate, payoutEndDate, numberModalPayouts, surrenderValue, payoutChangePercentage, payoutChangeAmount, periodCertainType, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnuityAccount {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    annuityProductType: ").append(toIndentedString(annuityProductType)).append("\n");
    sb.append("    annuityValueBasis: ").append(toIndentedString(annuityValueBasis)).append("\n");
    sb.append("    paymentAmount: ").append(toIndentedString(paymentAmount)).append("\n");
    sb.append("    paymentFrequency: ").append(toIndentedString(paymentFrequency)).append("\n");
    sb.append("    paymentStartDate: ").append(toIndentedString(paymentStartDate)).append("\n");
    sb.append("    paymentEndDate: ").append(toIndentedString(paymentEndDate)).append("\n");
    sb.append("    totalPaymentCount: ").append(toIndentedString(totalPaymentCount)).append("\n");
    sb.append("    netPresentValue: ").append(toIndentedString(netPresentValue)).append("\n");
    sb.append("    annualIncrease: ").append(toIndentedString(annualIncrease)).append("\n");
    sb.append("    annualIncreaseType: ").append(toIndentedString(annualIncreaseType)).append("\n");
    sb.append("    periodCertainGuarantee: ").append(toIndentedString(periodCertainGuarantee)).append("\n");
    sb.append("    payoutType: ").append(toIndentedString(payoutType)).append("\n");
    sb.append("    policyProductType: ").append(toIndentedString(policyProductType)).append("\n");
    sb.append("    payoutAmount: ").append(toIndentedString(payoutAmount)).append("\n");
    sb.append("    payoutMode: ").append(toIndentedString(payoutMode)).append("\n");
    sb.append("    payoutStartDate: ").append(toIndentedString(payoutStartDate)).append("\n");
    sb.append("    payoutEndDate: ").append(toIndentedString(payoutEndDate)).append("\n");
    sb.append("    numberModalPayouts: ").append(toIndentedString(numberModalPayouts)).append("\n");
    sb.append("    surrenderValue: ").append(toIndentedString(surrenderValue)).append("\n");
    sb.append("    payoutChangePercentage: ").append(toIndentedString(payoutChangePercentage)).append("\n");
    sb.append("    payoutChangeAmount: ").append(toIndentedString(payoutChangeAmount)).append("\n");
    sb.append("    periodCertainType: ").append(toIndentedString(periodCertainType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
