/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.StockType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.LocalDate;
/**
 * A stock security
 */
@Schema(description = "A stock security")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class StockSecurity {
  @SerializedName("unitsStreet")
  private BigDecimal unitsStreet = null;

  @SerializedName("unitsUser")
  private BigDecimal unitsUser = null;

  @SerializedName("reinvestDividends")
  private Boolean reinvestDividends = null;

  @SerializedName("stockType")
  private StockType stockType = null;

  @SerializedName("yield")
  private BigDecimal yield = null;

  @SerializedName("yieldAsOfDate")
  private LocalDate yieldAsOfDate = null;

  public StockSecurity unitsStreet(BigDecimal unitsStreet) {
    this.unitsStreet = unitsStreet;
    return this;
  }

   /**
   * The units in the FI&#x27;s street name as a positive quantity
   * @return unitsStreet
  **/
  @Schema(description = "The units in the FI's street name as a positive quantity")
  public BigDecimal getUnitsStreet() {
    return unitsStreet;
  }

  public void setUnitsStreet(BigDecimal unitsStreet) {
    this.unitsStreet = unitsStreet;
  }

  public StockSecurity unitsUser(BigDecimal unitsUser) {
    this.unitsUser = unitsUser;
    return this;
  }

   /**
   * The units in user&#x27;s name directly as a positive quantity
   * @return unitsUser
  **/
  @Schema(description = "The units in user's name directly as a positive quantity")
  public BigDecimal getUnitsUser() {
    return unitsUser;
  }

  public void setUnitsUser(BigDecimal unitsUser) {
    this.unitsUser = unitsUser;
  }

  public StockSecurity reinvestDividends(Boolean reinvestDividends) {
    this.reinvestDividends = reinvestDividends;
    return this;
  }

   /**
   * Selection to reinvest dividends
   * @return reinvestDividends
  **/
  @Schema(description = "Selection to reinvest dividends")
  public Boolean isReinvestDividends() {
    return reinvestDividends;
  }

  public void setReinvestDividends(Boolean reinvestDividends) {
    this.reinvestDividends = reinvestDividends;
  }

  public StockSecurity stockType(StockType stockType) {
    this.stockType = stockType;
    return this;
  }

   /**
   * Get stockType
   * @return stockType
  **/
  @Schema(description = "")
  public StockType getStockType() {
    return stockType;
  }

  public void setStockType(StockType stockType) {
    this.stockType = stockType;
  }

  public StockSecurity yield(BigDecimal yield) {
    this.yield = yield;
    return this;
  }

   /**
   * The current yield
   * @return yield
  **/
  @Schema(description = "The current yield")
  public BigDecimal getYield() {
    return yield;
  }

  public void setYield(BigDecimal yield) {
    this.yield = yield;
  }

  public StockSecurity yieldAsOfDate(LocalDate yieldAsOfDate) {
    this.yieldAsOfDate = yieldAsOfDate;
    return this;
  }

   /**
   * Get yieldAsOfDate
   * @return yieldAsOfDate
  **/
  @Schema(description = "")
  public LocalDate getYieldAsOfDate() {
    return yieldAsOfDate;
  }

  public void setYieldAsOfDate(LocalDate yieldAsOfDate) {
    this.yieldAsOfDate = yieldAsOfDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StockSecurity stockSecurity = (StockSecurity) o;
    return Objects.equals(this.unitsStreet, stockSecurity.unitsStreet) &&
        Objects.equals(this.unitsUser, stockSecurity.unitsUser) &&
        Objects.equals(this.reinvestDividends, stockSecurity.reinvestDividends) &&
        Objects.equals(this.stockType, stockSecurity.stockType) &&
        Objects.equals(this.yield, stockSecurity.yield) &&
        Objects.equals(this.yieldAsOfDate, stockSecurity.yieldAsOfDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(unitsStreet, unitsUser, reinvestDividends, stockType, yield, yieldAsOfDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StockSecurity {\n");
    
    sb.append("    unitsStreet: ").append(toIndentedString(unitsStreet)).append("\n");
    sb.append("    unitsUser: ").append(toIndentedString(unitsUser)).append("\n");
    sb.append("    reinvestDividends: ").append(toIndentedString(reinvestDividends)).append("\n");
    sb.append("    stockType: ").append(toIndentedString(stockType)).append("\n");
    sb.append("    yield: ").append(toIndentedString(yield)).append("\n");
    sb.append("    yieldAsOfDate: ").append(toIndentedString(yieldAsOfDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
