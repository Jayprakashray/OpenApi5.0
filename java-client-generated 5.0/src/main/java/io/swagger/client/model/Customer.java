/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CustomerName;
import io.swagger.client.model.CustomerToAccountRelationship;
import io.swagger.client.model.DeliveryAddress;
import io.swagger.client.model.Iso3166CountryCode;
import io.swagger.client.model.TelephoneNumber;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * Represents a customer
 */
@Schema(description = "Represents a customer")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class Customer {
  @SerializedName("customerId")
  private String customerId = null;

  @SerializedName("name")
  private CustomerName name = null;

  @SerializedName("dateOfBirth")
  private LocalDate dateOfBirth = null;

  @SerializedName("taxId")
  private String taxId = null;

  @SerializedName("taxIdCountry")
  private Iso3166CountryCode taxIdCountry = null;

  @SerializedName("governmentId")
  private String governmentId = null;

  @SerializedName("email")
  private List<String> email = null;

  @SerializedName("addresses")
  private List<DeliveryAddress> addresses = null;

  @SerializedName("telephones")
  private List<TelephoneNumber> telephones = null;

  @SerializedName("accounts")
  private List<CustomerToAccountRelationship> accounts = null;

  public Customer customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @Schema(description = "")
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }

  public Customer name(CustomerName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public CustomerName getName() {
    return name;
  }

  public void setName(CustomerName name) {
    this.name = name;
  }

  public Customer dateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @Schema(description = "")
  public LocalDate getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public Customer taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

   /**
   * Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)
   * @return taxId
  **/
  @Schema(description = "Country specific Tax Id associated with this customer (SIN or NAS in Canada, SSN or TIN in US, etc.)")
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }

  public Customer taxIdCountry(Iso3166CountryCode taxIdCountry) {
    this.taxIdCountry = taxIdCountry;
    return this;
  }

   /**
   * Get taxIdCountry
   * @return taxIdCountry
  **/
  @Schema(description = "")
  public Iso3166CountryCode getTaxIdCountry() {
    return taxIdCountry;
  }

  public void setTaxIdCountry(Iso3166CountryCode taxIdCountry) {
    this.taxIdCountry = taxIdCountry;
  }

  public Customer governmentId(String governmentId) {
    this.governmentId = governmentId;
    return this;
  }

   /**
   * A federal (such as passport) or state (such as driver&#x27;s license) issued identifier
   * @return governmentId
  **/
  @Schema(description = "A federal (such as passport) or state (such as driver's license) issued identifier")
  public String getGovernmentId() {
    return governmentId;
  }

  public void setGovernmentId(String governmentId) {
    this.governmentId = governmentId;
  }

  public Customer email(List<String> email) {
    this.email = email;
    return this;
  }

  public Customer addEmailItem(String emailItem) {
    if (this.email == null) {
      this.email = new ArrayList<String>();
    }
    this.email.add(emailItem);
    return this;
  }

   /**
   * An array of the customer&#x27;s electronic mail addresses
   * @return email
  **/
  @Schema(description = "An array of the customer's electronic mail addresses")
  public List<String> getEmail() {
    return email;
  }

  public void setEmail(List<String> email) {
    this.email = email;
  }

  public Customer addresses(List<DeliveryAddress> addresses) {
    this.addresses = addresses;
    return this;
  }

  public Customer addAddressesItem(DeliveryAddress addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<DeliveryAddress>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * An array of the customer&#x27;s physical mail addresses
   * @return addresses
  **/
  @Schema(description = "An array of the customer's physical mail addresses")
  public List<DeliveryAddress> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<DeliveryAddress> addresses) {
    this.addresses = addresses;
  }

  public Customer telephones(List<TelephoneNumber> telephones) {
    this.telephones = telephones;
    return this;
  }

  public Customer addTelephonesItem(TelephoneNumber telephonesItem) {
    if (this.telephones == null) {
      this.telephones = new ArrayList<TelephoneNumber>();
    }
    this.telephones.add(telephonesItem);
    return this;
  }

   /**
   * An array of the customer&#x27;s telephone numbers
   * @return telephones
  **/
  @Schema(description = "An array of the customer's telephone numbers")
  public List<TelephoneNumber> getTelephones() {
    return telephones;
  }

  public void setTelephones(List<TelephoneNumber> telephones) {
    this.telephones = telephones;
  }

  public Customer accounts(List<CustomerToAccountRelationship> accounts) {
    this.accounts = accounts;
    return this;
  }

  public Customer addAccountsItem(CustomerToAccountRelationship accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<CustomerToAccountRelationship>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

   /**
   * List of accounts related to this customer
   * @return accounts
  **/
  @Schema(description = "List of accounts related to this customer")
  public List<CustomerToAccountRelationship> getAccounts() {
    return accounts;
  }

  public void setAccounts(List<CustomerToAccountRelationship> accounts) {
    this.accounts = accounts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return Objects.equals(this.customerId, customer.customerId) &&
        Objects.equals(this.name, customer.name) &&
        Objects.equals(this.dateOfBirth, customer.dateOfBirth) &&
        Objects.equals(this.taxId, customer.taxId) &&
        Objects.equals(this.taxIdCountry, customer.taxIdCountry) &&
        Objects.equals(this.governmentId, customer.governmentId) &&
        Objects.equals(this.email, customer.email) &&
        Objects.equals(this.addresses, customer.addresses) &&
        Objects.equals(this.telephones, customer.telephones) &&
        Objects.equals(this.accounts, customer.accounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerId, name, dateOfBirth, taxId, taxIdCountry, governmentId, email, addresses, telephones, accounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");
    
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    taxIdCountry: ").append(toIndentedString(taxIdCountry)).append("\n");
    sb.append("    governmentId: ").append(toIndentedString(governmentId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    telephones: ").append(toIndentedString(telephones)).append("\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
