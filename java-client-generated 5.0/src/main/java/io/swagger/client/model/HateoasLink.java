/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ContentTypes;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * REST application constraint (Hypermedia As The Engine Of Application State)
 */
@Schema(description = "REST application constraint (Hypermedia As The Engine Of Application State)")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class HateoasLink {
  @SerializedName("href")
  private String href = null;

  /**
   * HTTP Method to use for the request
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    GET("GET"),
    POST("POST"),
    PATCH("PATCH"),
    DELETE("DELETE"),
    PUT("PUT");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ActionEnum fromValue(String input) {
      for (ActionEnum b : ActionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ActionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("action")
  private ActionEnum action = null;

  @SerializedName("rel")
  private String rel = null;

  @SerializedName("types")
  private List<ContentTypes> types = null;

  public HateoasLink href(String href) {
    this.href = href;
    return this;
  }

   /**
   * URL to invoke the action on the resource
   * @return href
  **/
  @Schema(example = "https://api.fi.com/fdx/v4/accounts/12345", required = true, description = "URL to invoke the action on the resource")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public HateoasLink action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * HTTP Method to use for the request
   * @return action
  **/
  @Schema(description = "HTTP Method to use for the request")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public HateoasLink rel(String rel) {
    this.rel = rel;
    return this;
  }

   /**
   * Relation of this link to its containing entity, as defined by and with many example relation values at [IETF RFC5988](https://datatracker.ietf.org/doc/html/rfc5988)
   * @return rel
  **/
  @Schema(description = "Relation of this link to its containing entity, as defined by and with many example relation values at [IETF RFC5988](https://datatracker.ietf.org/doc/html/rfc5988)")
  public String getRel() {
    return rel;
  }

  public void setRel(String rel) {
    this.rel = rel;
  }

  public HateoasLink types(List<ContentTypes> types) {
    this.types = types;
    return this;
  }

  public HateoasLink addTypesItem(ContentTypes typesItem) {
    if (this.types == null) {
      this.types = new ArrayList<ContentTypes>();
    }
    this.types.add(typesItem);
    return this;
  }

   /**
   * Content-types that can be used in the Accept header
   * @return types
  **/
  @Schema(description = "Content-types that can be used in the Accept header")
  public List<ContentTypes> getTypes() {
    return types;
  }

  public void setTypes(List<ContentTypes> types) {
    this.types = types;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HateoasLink hateoasLink = (HateoasLink) o;
    return Objects.equals(this.href, hateoasLink.href) &&
        Objects.equals(this.action, hateoasLink.action) &&
        Objects.equals(this.rel, hateoasLink.rel) &&
        Objects.equals(this.types, hateoasLink.types);
  }

  @Override
  public int hashCode() {
    return Objects.hash(href, action, rel, types);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HateoasLink {\n");
    
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    rel: ").append(toIndentedString(rel)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
