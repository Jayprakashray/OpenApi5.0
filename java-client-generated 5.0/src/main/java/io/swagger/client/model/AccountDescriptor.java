/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AccountStatus;
import io.swagger.client.model.AccountType;
import io.swagger.client.model.Currency;
import io.swagger.client.model.Error;
import io.swagger.client.model.FiAttribute;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * This descriptor provides minimal information about the account for use in lightweight arrays
 */
@Schema(description = "This descriptor provides minimal information about the account for use in lightweight arrays")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-16T18:27:34.841Z[GMT]")
public class AccountDescriptor {
  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("error")
  private Error error = null;

  @SerializedName("accountType")
  private AccountType accountType = null;

  @SerializedName("accountNumber")
  private String accountNumber = null;

  @SerializedName("accountNumberDisplay")
  private String accountNumberDisplay = null;

  @SerializedName("productName")
  private String productName = null;

  @SerializedName("nickname")
  private String nickname = null;

  @SerializedName("status")
  private AccountStatus status = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("fiAttributes")
  private List<FiAttribute> fiAttributes = null;

  public AccountDescriptor accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public AccountDescriptor error(Error error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @Schema(description = "")
  public Error getError() {
    return error;
  }

  public void setError(Error error) {
    this.error = error;
  }

  public AccountDescriptor accountType(AccountType accountType) {
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @Schema(description = "")
  public AccountType getAccountType() {
    return accountType;
  }

  public void setAccountType(AccountType accountType) {
    this.accountType = accountType;
  }

  public AccountDescriptor accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Full account number for the end user&#x27;s handle for the account at the owning institution
   * @return accountNumber
  **/
  @Schema(description = "Full account number for the end user's handle for the account at the owning institution")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public AccountDescriptor accountNumberDisplay(String accountNumberDisplay) {
    this.accountNumberDisplay = accountNumberDisplay;
    return this;
  }

   /**
   * Account display number for the end user&#x27;s handle at the owning institution. This is to be displayed by the Interface Provider
   * @return accountNumberDisplay
  **/
  @Schema(description = "Account display number for the end user's handle at the owning institution. This is to be displayed by the Interface Provider")
  public String getAccountNumberDisplay() {
    return accountNumberDisplay;
  }

  public void setAccountNumberDisplay(String accountNumberDisplay) {
    this.accountNumberDisplay = accountNumberDisplay;
  }

  public AccountDescriptor productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Marketed product name for this account. Used in UIs to assist in account selection
   * @return productName
  **/
  @Schema(description = "Marketed product name for this account. Used in UIs to assist in account selection")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public AccountDescriptor nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * Name given by the user. Used in UIs to assist in account selection
   * @return nickname
  **/
  @Schema(description = "Name given by the user. Used in UIs to assist in account selection")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public AccountDescriptor status(AccountStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public AccountStatus getStatus() {
    return status;
  }

  public void setStatus(AccountStatus status) {
    this.status = status;
  }

  public AccountDescriptor description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of account
   * @return description
  **/
  @Schema(description = "Description of account")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AccountDescriptor currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public AccountDescriptor fiAttributes(List<FiAttribute> fiAttributes) {
    this.fiAttributes = fiAttributes;
    return this;
  }

  public AccountDescriptor addFiAttributesItem(FiAttribute fiAttributesItem) {
    if (this.fiAttributes == null) {
      this.fiAttributes = new ArrayList<FiAttribute>();
    }
    this.fiAttributes.add(fiAttributesItem);
    return this;
  }

   /**
   * Array of Financial institution-specific attributes
   * @return fiAttributes
  **/
  @Schema(description = "Array of Financial institution-specific attributes")
  public List<FiAttribute> getFiAttributes() {
    return fiAttributes;
  }

  public void setFiAttributes(List<FiAttribute> fiAttributes) {
    this.fiAttributes = fiAttributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountDescriptor accountDescriptor = (AccountDescriptor) o;
    return Objects.equals(this.accountId, accountDescriptor.accountId) &&
        Objects.equals(this.error, accountDescriptor.error) &&
        Objects.equals(this.accountType, accountDescriptor.accountType) &&
        Objects.equals(this.accountNumber, accountDescriptor.accountNumber) &&
        Objects.equals(this.accountNumberDisplay, accountDescriptor.accountNumberDisplay) &&
        Objects.equals(this.productName, accountDescriptor.productName) &&
        Objects.equals(this.nickname, accountDescriptor.nickname) &&
        Objects.equals(this.status, accountDescriptor.status) &&
        Objects.equals(this.description, accountDescriptor.description) &&
        Objects.equals(this.currency, accountDescriptor.currency) &&
        Objects.equals(this.fiAttributes, accountDescriptor.fiAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, error, accountType, accountNumber, accountNumberDisplay, productName, nickname, status, description, currency, fiAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountDescriptor {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    accountNumberDisplay: ").append(toIndentedString(accountNumberDisplay)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    fiAttributes: ").append(toIndentedString(fiAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
