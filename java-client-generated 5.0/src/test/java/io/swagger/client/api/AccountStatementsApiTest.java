/*
 * FDX V5.0
 * Financial Data Exchange V5.0 Core API
 *
 * OpenAPI spec version: 5.0.0
 * Contact: fdxsupport@financialdataexchange.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Error;
import java.io.File;
import org.threeten.bp.LocalDate;
import io.swagger.client.model.Statements;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AccountStatementsApi
 */
@Ignore
public class AccountStatementsApiTest {

    private final AccountStatementsApi api = new AccountStatementsApi();

    /**
     * Get an account statement
     *
     * Gets an account statement image file. Use [HTTP Accept request-header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html) to specify desired content types. See ContentTypes definition for typical values
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAccountStatementTest() throws Exception {
        String authorization = null;
        String accountId = null;
        String statementId = null;
        File response = api.getAccountStatement(authorization, accountId, statementId);

        // TODO: test validations
    }
    /**
     * Search for statements
     *
     * Get account statements. Example: GET /accounts/{accountId}/statements?startTime&#x3D;value1&amp;endTime&#x3D;value2
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchForAccountStatementsTest() throws Exception {
        String authorization = null;
        String accountId = null;
        LocalDate startTime = null;
        LocalDate endTime = null;
        String offset = null;
        Integer limit = null;
        Statements response = api.searchForAccountStatements(authorization, accountId, startTime, endTime, offset, limit);

        // TODO: test validations
    }
}
